---
import { Icons } from "./icons.ts";

interface Path {
  d: string;
  class?: string;
  fill?: string;
  opacity?: string;
  strokeLinejoin?: string;
}

interface Circle {
  cx: string;
  cy: string;
  r: string;
  fill: string;
}

const { name } = Astro.props;
 
let icon = (Icons as any)[name] || {};

let paths: Path[] = icon.paths || [];
---

{
  icon ? (
    <svg
      xmlns={icon.xmlns}
      class={icon.class}
      height={icon.height}
      viewBox={icon.viewBox}
      width={icon.width}
      fill={icon.fill}
      clip-rule={icon.clipRule}
      fill-rule={icon.fillRule}
      stroke={icon.stroke}
      stroke-width={icon.strokeWidth}
      stroke-linecap={icon.strokeLinecap}
      stroke-linejoin={icon.strokeLinejoin}
    ><title>{icon.title}</title>
      {paths.map((path: Path) => (
        <path d={path.d} class={path.class || ""} fill={path.fill} opacity={path.opacity}  />
      ))}
      {
        icon.circle && icon.circle.map((c: Circle) => (
          <circle cx={c.cx} cy={c.cy} r={c.r} fill={c.fill} />
        ))
      }
      {
        icon.g && icon.g.map((g: any) => (
          <g fill={g.fill} stroke={g.stroke} stroke-width={g.strokeWidth} />
        ))
      }
    </svg>
  ) : (
      "Icon not found"
  )
}
